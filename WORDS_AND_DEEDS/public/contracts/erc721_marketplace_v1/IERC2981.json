{
  "contractName": "IERC2981",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n *\n * _Available since v4.5._\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice)\n        external\n        view\n        returns (address receiver, uint256 royaltyAmount);\n}\n",
  "sourcePath": "/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/interfaces/IERC2981.sol",
  "ast": {
    "absolutePath": "/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/interfaces/IERC2981.sol",
    "exportedSymbols": {
      "IERC165": [
        6004
      ],
      "IERC2981": [
        1107
      ]
    },
    "id": 1108,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1090,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:7"
      },
      {
        "absolutePath": "/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/utils/introspection/IERC165.sol",
        "file": "../utils/introspection/IERC165.sol",
        "id": 1091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1108,
        "sourceUnit": 6005,
        "src": "132:44:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1093,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6004,
              "src": "490:7:7"
            },
            "id": 1094,
            "nodeType": "InheritanceSpecifier",
            "src": "490:7:7"
          }
        ],
        "canonicalName": "IERC2981",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1092,
          "nodeType": "StructuredDocumentation",
          "src": "178:289:7",
          "text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"
        },
        "fullyImplemented": false,
        "id": 1107,
        "linearizedBaseContracts": [
          1107,
          6004
        ],
        "name": "IERC2981",
        "nameLocation": "478:8:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1095,
              "nodeType": "StructuredDocumentation",
              "src": "504:231:7",
              "text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
            },
            "functionSelector": "2a55205a",
            "id": 1106,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyInfo",
            "nameLocation": "749:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "769:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "761:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "salePrice",
                  "nameLocation": "786:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "778:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:36:7"
            },
            "returnParameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "852:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "844:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "royaltyAmount",
                  "nameLocation": "870:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "862:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:41:7"
            },
            "scope": 1107,
            "src": "740:145:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1108,
        "src": "468:419:7",
        "usedErrors": []
      }
    ],
    "src": "107:781:7"
  },
  "legacyAST": {
    "absolutePath": "/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/interfaces/IERC2981.sol",
    "exportedSymbols": {
      "IERC165": [
        6004
      ],
      "IERC2981": [
        1107
      ]
    },
    "id": 1108,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1090,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:7"
      },
      {
        "absolutePath": "/home/frederic/development/p2pmoney-dev/var/lib/git/repos/javascript/primusmoney_mytokens_webapp/react_apps/my-pwa-apps/my-deed/contracts/utils/introspection/IERC165.sol",
        "file": "../utils/introspection/IERC165.sol",
        "id": 1091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1108,
        "sourceUnit": 6005,
        "src": "132:44:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1093,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6004,
              "src": "490:7:7"
            },
            "id": 1094,
            "nodeType": "InheritanceSpecifier",
            "src": "490:7:7"
          }
        ],
        "canonicalName": "IERC2981",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1092,
          "nodeType": "StructuredDocumentation",
          "src": "178:289:7",
          "text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"
        },
        "fullyImplemented": false,
        "id": 1107,
        "linearizedBaseContracts": [
          1107,
          6004
        ],
        "name": "IERC2981",
        "nameLocation": "478:8:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1095,
              "nodeType": "StructuredDocumentation",
              "src": "504:231:7",
              "text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
            },
            "functionSelector": "2a55205a",
            "id": 1106,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "royaltyInfo",
            "nameLocation": "749:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "769:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "761:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "salePrice",
                  "nameLocation": "786:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "778:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:36:7"
            },
            "returnParameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "852:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "844:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "royaltyAmount",
                  "nameLocation": "870:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "862:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:41:7"
            },
            "scope": 1107,
            "src": "740:145:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1108,
        "src": "468:419:7",
        "usedErrors": []
      }
    ],
    "src": "107:781:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-10-12T13:38:27.001Z",
  "devdoc": {
    "details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._",
    "kind": "dev",
    "methods": {
      "royaltyInfo(uint256,uint256)": {
        "details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}