{
	"id": "f2050ff7a57484d809acccfee13d6760",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol": {
				"content": "pragma solidity ^0.8.4;\n\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2018 Murray Software, LLC.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n//solhint-disable max-line-length\n//solhint-disable no-inline-assembly\n\ncontract CloneFactory {\n\n  function createClone(address target) internal returns (address result) {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      let clone := mload(0x40)\n      mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n      mstore(add(clone, 0x14), targetBytes)\n      mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n      result := create(0, clone, 0x37)\n    }\n  }\n\n  function isClone(address target, address query) internal view returns (bool result) {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      let clone := mload(0x40)\n      mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\n      mstore(add(clone, 0xa), targetBytes)\n      mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n\n      let other := add(clone, 0x40)\n      extcodecopy(query, other, 0, 0x2d)\n      result := and(\n        eq(mload(clone), mload(other)),\n        eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\n      )\n    }\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol": {
				"CloneFactory": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol\":1191:2285  contract CloneFactory {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol\":1191:2285  contract CloneFactory {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b94f8a374dfe1ea94162339752a22e77b20121640d15d2f0b31b818ffeee468364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b94f8a374dfe1ea94162339752a22e77b20121640d15d2f0b31b818ffeee468364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x4F DUP11 CALLDATACOPY 0x4D INVALID 0x1E 0xA9 COINBASE PUSH3 0x339752 LOG2 0x2E PUSH24 0xB20121640D15D2F0B31B818FFEEE468364736F6C63430008 GT STOP CALLER ",
							"sourceMap": "1191:1094:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b94f8a374dfe1ea94162339752a22e77b20121640d15d2f0b31b818ffeee468364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x4F DUP11 CALLDATACOPY 0x4D INVALID 0x1E 0xA9 COINBASE PUSH3 0x339752 LOG2 0x2E PUSH24 0xB20121640D15D2F0B31B818FFEEE468364736F6C63430008 GT STOP CALLER ",
							"sourceMap": "1191:1094:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"createClone(address)": "infinite",
								"isClone(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 2285,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b94f8a374dfe1ea94162339752a22e77b20121640d15d2f0b31b818ffeee468364736f6c63430008110033",
									".code": [
										{
											"begin": 1191,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1191,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 2285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 2285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 2285,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol\":{\"keccak256\":\"0xb560622ad4860936a7a8c5a9ef8bda3b367b1a91300eaade107c4ba5dde053a4\",\"urls\":[\"bzz-raw://2b23bba9b87b645ce8fc27a8a3190ddd8eabeea985f50ea5e9faa2998423509e\",\"dweb:/ipfs/QmcB2o4qnCMgbxfhYcRsAEDTaT43wF9w6o1cFE269SRthd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> .deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": ".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@optionality.io/clone-factory/contracts/CloneFactory.sol",
					"exportedSymbols": {
						"CloneFactory": [
							36
						]
					},
					"id": 37,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CloneFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "CloneFactory",
							"nameLocation": "1200:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1289:370:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "targetBytes",
														"nameLocation": "1303:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 16,
														"src": "1295:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 8,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "1295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 14,
												"initialValue": {
													"arguments": [
														{
															"id": 12,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes20_$",
															"typeString": "type(bytes20)"
														},
														"typeName": {
															"id": 10,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "1317:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1317:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1295:37:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1347:308:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1355:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1374:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:11:0"
															},
															"variables": [
																{
																	"name": "clone",
																	"nodeType": "YulTypedName",
																	"src": "1359:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "1393:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1400:66:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:81:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:81:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "1485:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1492:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1481:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:16:0"
																	},
																	{
																		"name": "targetBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1499:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:37:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1474:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "1529:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:4:0",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:66:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:92:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1518:92:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1617:32:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "1637:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:22:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 6,
														"isOffset": false,
														"isSlot": false,
														"src": "1617:6:0",
														"valueSize": 1
													},
													{
														"declaration": 9,
														"isOffset": false,
														"isSlot": false,
														"src": "1499:11:0",
														"valueSize": 1
													}
												],
												"id": 15,
												"nodeType": "InlineAssembly",
												"src": "1338:317:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createClone",
									"nameLocation": "1227:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1247:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1239:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:16:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1281:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1272:16:0"
									},
									"scope": 36,
									"src": "1218:441:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "1747:536:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "targetBytes",
														"nameLocation": "1761:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "1753:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 26,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "1753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [
														{
															"id": 30,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes20_$",
															"typeString": "type(bytes20)"
														},
														"typeName": {
															"id": 28,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "1775:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1775:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1753:37:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1805:474:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1813:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1832:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1826:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:11:0"
															},
															"variables": [
																{
																	"name": "clone",
																	"nodeType": "YulTypedName",
																	"src": "1817:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "1851:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:66:0",
																		"type": "",
																		"value": "0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1844:81:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1844:81:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "1943:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1950:3:0",
																				"type": "",
																				"value": "0xa"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1939:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1939:15:0"
																	},
																	{
																		"name": "targetBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1956:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1932:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:36:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1932:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "clone",
																				"nodeType": "YulIdentifier",
																				"src": "1986:5:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1993:4:0",
																				"type": "",
																				"value": "0x1e"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1982:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1982:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:66:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:92:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1975:92:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2075:29:0",
															"value": {
																"arguments": [
																	{
																		"name": "clone",
																		"nodeType": "YulIdentifier",
																		"src": "2092:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2099:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:16:0"
															},
															"variables": [
																{
																	"name": "other",
																	"nodeType": "YulTypedName",
																	"src": "2079:5:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "query",
																		"nodeType": "YulIdentifier",
																		"src": "2123:5:0"
																	},
																	{
																		"name": "other",
																		"nodeType": "YulIdentifier",
																		"src": "2130:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2140:4:0",
																		"type": "",
																		"value": "0x2d"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nodeType": "YulIdentifier",
																	"src": "2111:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2111:34:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2111:34:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2152:121:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "clone",
																						"nodeType": "YulIdentifier",
																						"src": "2184:5:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2178:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2178:12:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "other",
																						"nodeType": "YulIdentifier",
																						"src": "2198:5:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2192:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2192:12:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2175:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2175:30:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "clone",
																								"nodeType": "YulIdentifier",
																								"src": "2228:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2235:3:0",
																								"type": "",
																								"value": "0xd"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2224:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2224:15:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2218:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2218:22:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "other",
																								"nodeType": "YulIdentifier",
																								"src": "2252:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2259:3:0",
																								"type": "",
																								"value": "0xd"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2248:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2248:15:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2242:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2242:22:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2215:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2215:50:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2162:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:111:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2123:5:0",
														"valueSize": 1
													},
													{
														"declaration": 24,
														"isOffset": false,
														"isSlot": false,
														"src": "2152:6:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "1956:11:0",
														"valueSize": 1
													}
												],
												"id": 33,
												"nodeType": "InlineAssembly",
												"src": "1796:483:0"
											}
										]
									},
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isClone",
									"nameLocation": "1672:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1688:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1680:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "query",
												"nameLocation": "1704:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1696:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:31:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1739:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1734:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:13:0"
									},
									"scope": 36,
									"src": "1663:620:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 37,
							"src": "1191:1094:0",
							"usedErrors": []
						}
					],
					"src": "0:2286:0"
				},
				"id": 0
			}
		}
	}
}