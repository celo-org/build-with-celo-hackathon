{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xad0f2669a01a73c84678f18B276f43d41D1663F3",
    "txHash": "0xce609c88828afb30061fb1c476fd15bf1f9a1b9dc1e9bc9b6b7655f0440660d6"
  },
  "proxies": [
    {
      "address": "0x30e6D6F8BE1662a9F894bc8d8416EF21e8a7c48E",
      "txHash": "0x7d40099a579ef89afb002472a821d07dd2cf458d1e0e598cdbc55f85bc43cbe9",
      "kind": "transparent"
    },
    {
      "address": "0x5646a8eEc074e90705109156721411e17B132396",
      "txHash": "0x8bc7fdce79c256e3ec2635433ee867d904975234d39ae892a506889e190bacd2",
      "kind": "transparent"
    },
    {
      "address": "0x17F2718Da67BA45DD52673CdfF0f48542c406bb6",
      "txHash": "0x9fe8be656966281706e168031851531448822f2e0c05d3d8e4088e78a5359f64",
      "kind": "transparent"
    },
    {
      "address": "0x42d0985951b13042ad9aF00e9702b83AaE298B90",
      "txHash": "0x60381e63f667f06d0390bbe67e6096d31e3a13c4ef374372b703d8b4d8031482",
      "kind": "transparent"
    },
    {
      "address": "0x53CB991435C6f6d8bb9D4d32C127384D999a1548",
      "txHash": "0x768432a9d322ebee95a371fd3f9817bc8ee995be2000d8463872196dabc9fe6e",
      "kind": "transparent"
    },
    {
      "address": "0xCCBa875603bF00A5A532643BF0E360FE02D237e0",
      "txHash": "0x6a91772a6967e18fda65b61ea6a278cd923c51743115967b0a7d8b096dbf63be",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ccf4f8be03515d5f30ce3737478dc9cc1b63add7ec5a9feed6b8dba8b26572ef": {
      "address": "0x0256c2FB90605eD83caC132cD3fDcC6df55b1dC8",
      "txHash": "0x798912916336e3284a59f0fbe3cb1bb344e9ead97e8d6ad7fb1f497d2af8afa4",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "celoBalance",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:30"
          },
          {
            "label": "allowedTokensAddresses",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:31"
          },
          {
            "label": "contractTokenBalances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:34"
          },
          {
            "label": "tokenIsAllowed",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c478207911b5a9a841d9113dea5a58ec7f74f77e42ce66e63d5f1b05676d5e80": {
      "address": "0xf9Ae6D18576EC52F52c10cD668fdfEa2098AcEc0",
      "txHash": "0x1d044b09f5eb94fbddd4218bb8ca1f67806b977210196f4289712aeceb78b3af",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "celoBalance",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:30"
          },
          {
            "label": "allowedTokensAddresses",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:31"
          },
          {
            "label": "contractTokenBalances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:34"
          },
          {
            "label": "tokenIsAllowed",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CeloDepositAndWithdrawUpgradeable",
            "src": "contracts/celoDepositAndWithdraw.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
