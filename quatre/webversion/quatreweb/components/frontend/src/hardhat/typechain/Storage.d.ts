/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface StorageInterface extends ethers.utils.Interface {
  functions: {
    "retrieve()": FunctionFragment;
    "store(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "retrieve", values?: undefined): string;
  encodeFunctionData(functionFragment: "store", values: [BigNumberish]): string;

  decodeFunctionResult(functionFragment: "retrieve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "store", data: BytesLike): Result;

  events: {
    "newNumber(uint256,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "newNumber"): EventFragment;
}

export class Storage extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: StorageInterface;

  functions: {
    retrieve(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "retrieve()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    store(
      num: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "store(uint256)"(
      num: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  retrieve(overrides?: CallOverrides): Promise<BigNumber>;

  "retrieve()"(overrides?: CallOverrides): Promise<BigNumber>;

  store(num: BigNumberish, overrides?: Overrides): Promise<ContractTransaction>;

  "store(uint256)"(
    num: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    retrieve(overrides?: CallOverrides): Promise<BigNumber>;

    "retrieve()"(overrides?: CallOverrides): Promise<BigNumber>;

    store(num: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "store(uint256)"(
      num: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    newNumber(number: null, sender: null): EventFilter;
  };

  estimateGas: {
    retrieve(overrides?: CallOverrides): Promise<BigNumber>;

    "retrieve()"(overrides?: CallOverrides): Promise<BigNumber>;

    store(num: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "store(uint256)"(
      num: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    retrieve(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "retrieve()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    store(
      num: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "store(uint256)"(
      num: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
