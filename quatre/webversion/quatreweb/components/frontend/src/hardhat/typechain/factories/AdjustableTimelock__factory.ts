/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AdjustableTimelock } from "../AdjustableTimelock";

export class AdjustableTimelock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_token: string, overrides?: Overrides): Promise<AdjustableTimelock> {
    return super.deploy(_token, overrides || {}) as Promise<AdjustableTimelock>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): AdjustableTimelock {
    return super.attach(address) as AdjustableTimelock;
  }
  connect(signer: Signer): AdjustableTimelock__factory {
    return super.connect(signer) as AdjustableTimelock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdjustableTimelock {
    return new Contract(address, _abi, signerOrProvider) as AdjustableTimelock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "beneficiary",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "split",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextRelease",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "firstWithdraw",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exist",
            type: "bool",
          },
        ],
        internalType: "struct AdjustableTimelock.Data",
        name: "data",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "nextReleaseInDays",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "intervalInDays",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "firstWithdraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subsequentSplit",
        type: "uint256",
      },
    ],
    name: "setBeneficiary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610edc380380610edc83398101604081905261002f91610085565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180556001600160a01b03166080526100b5565b60006020828403121561009757600080fd5b81516001600160a01b03811681146100ae57600080fd5b9392505050565b608051610dfe6100de6000396000818161015e0152818161046d015261055e0152610dfe6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fe578063b91988db14610123578063f2fde38b14610146578063fc0c546a1461015957600080fd5b80633ccfd60b14610082578063715018a61461008c5780638100856814610094575b600080fd5b61008a610180565b005b61008a610596565b6100a76100a2366004610bae565b61060a565b6040516100f59190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b60405180910390f35b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f5565b610136610131366004610be2565b6106a9565b60405190151581526020016100f5565b61008a610154366004610bae565b6107f2565b61010b7f000000000000000000000000000000000000000000000000000000000000000081565b600260015414156101d85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260018181553360009081526020838152604091829020825160c0810184528154815293810154918401919091529283015490820152600382015460608201526004820154608082015260059091015460ff16151560a082018190526102725760405162461bcd60e51b815260206004820152600e60248201526d155cd95c881b9bdd08195e1a5cdd60921b60448201526064016101cf565b60808101516000901561030e5760208201514263ffffffff1610156102c95760405162461bcd60e51b815260206004820152600d60248201526c2737ba103cb2ba103a34b6b29760991b60448201526064016101cf565b5033600090815260026020526040808220600401919091556080820151908201516102fa9063ffffffff4216610c57565b336000908152600260205260409020600101555b6080820151158015610324575060008260600151115b156104555760208201514263ffffffff16101561039e5760405162461bcd60e51b815260206004820152603260248201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260448201527165666f72652072656c656173652074696d6560701b60648201526084016101cf565b60408201516103b39063ffffffff4216610c57565b3360009081526002602052604090206001015581516060830151106103fa57815160608301516103e39190610c6f565b336000908152600260205260409020600301555080515b81511580159061040e575060608201518251105b156104555750336000908152600260208190526040822082815560018101839055908101829055600381018290556004810191909155600501805460ff1916905560608101515b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156104b757600080fd5b505afa1580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef9190610c86565b90506000811180156105015750818110155b6105595760405162461bcd60e51b815260206004820152602360248201527f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560448201526261736560e81b60648201526084016101cf565b61058d7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633846108dc565b50506001805550565b6000546001600160a01b031633146105c05760405162461bcd60e51b81526004016101cf90610c9f565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6106456040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b506001600160a01b0316600090815260026020818152604092839020835160c08101855281548152600182015492810192909252918201549281019290925260038101546060830152600481015460808301526005015460ff16151560a082015290565b600080546001600160a01b031633146106d45760405162461bcd60e51b81526004016101cf90610c9f565b60008661ffff16116107195760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642074696d696e6760901b60448201526064016101cf565b6040518060c001604052808381526020018761ffff166201518061073d9190610cd4565b61074c9062ffffff1642610cff565b63ffffffff16815260200161076861ffff881662015180610cd4565b62ffffff168152602080820195909552604080820196909652600160609182018190526001600160a01b039990991660009081526002808752908790208351815595830151868b0155958201519585019590955593840151600384015550506080820151600482015560a0909101516005909101805460ff19169115159190911790555090919050565b6000546001600160a01b0316331461081c5760405162461bcd60e51b81526004016101cf90610c9f565b6001600160a01b0381166108815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101cf565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261092e908490610933565b505050565b6000610988826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a059092919063ffffffff16565b80519091501561092e57808060200190518101906109a69190610d27565b61092e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101cf565b6060610a148484600085610a1c565b949350505050565b606082471015610a7d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101cf565b600080866001600160a01b03168587604051610a999190610d79565b60006040518083038185875af1925050503d8060008114610ad6576040519150601f19603f3d011682016040523d82523d6000602084013e610adb565b606091505b5091509150610aec87838387610af7565b979650505050505050565b60608315610b63578251610b5c576001600160a01b0385163b610b5c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101cf565b5081610a14565b610a148383815115610b785781518083602001fd5b8060405162461bcd60e51b81526004016101cf9190610d95565b80356001600160a01b0381168114610ba957600080fd5b919050565b600060208284031215610bc057600080fd5b610bc982610b92565b9392505050565b803561ffff81168114610ba957600080fd5b60008060008060008060c08789031215610bfb57600080fd5b610c0487610b92565b9550610c1260208801610bd0565b9450610c2060408801610bd0565b9350606087013592506080870135915060a087013590509295509295509295565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c6a57610c6a610c41565b500190565b600082821015610c8157610c81610c41565b500390565b600060208284031215610c9857600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600062ffffff80831681851681830481118215151615610cf657610cf6610c41565b02949350505050565b600063ffffffff808316818516808303821115610d1e57610d1e610c41565b01949350505050565b600060208284031215610d3957600080fd5b81518015158114610bc957600080fd5b60005b83811015610d64578181015183820152602001610d4c565b83811115610d73576000848401525b50505050565b60008251610d8b818460208701610d49565b9190910192915050565b6020815260008251806020840152610db4816040850160208701610d49565b601f01601f1916919091016040019291505056fea264697066735822122041da53086e793218d1d747963c2b303f48fac75ad356c03ea9e4cc596acb116a64736f6c63430008090033";
