"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireWildcard(require("ui-box"));

var _FormFieldDescription = _interopRequireDefault(require("./FormFieldDescription"));

var _FormFieldHint = _interopRequireDefault(require("./FormFieldHint"));

var _FormFieldLabel = _interopRequireDefault(require("./FormFieldLabel"));

var _FormFieldValidationMessage = _interopRequireDefault(require("./FormFieldValidationMessage"));

var _excluded = ["hint", "label", "labelFor", "children", "isRequired", "labelProps", "description", "validationMessage"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var FormField = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function FormField(props, ref) {
  var hint = props.hint,
      label = props.label,
      labelFor = props.labelFor,
      children = props.children,
      isRequired = props.isRequired,
      _props$labelProps = props.labelProps,
      labelProps = _props$labelProps === void 0 ? {
    size: 400
  } : _props$labelProps,
      description = props.description,
      validationMessage = props.validationMessage,
      rest = (0, _objectWithoutProperties2["default"])(props, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_uiBox["default"], (0, _extends2["default"])({}, rest, {
    ref: ref
  }), /*#__PURE__*/_react["default"].createElement(_uiBox["default"], {
    display: "flex",
    flexDirection: "column",
    marginBottom: 8
  }, /*#__PURE__*/_react["default"].createElement(_FormFieldLabel["default"], (0, _extends2["default"])({
    htmlFor: labelFor,
    isAstrixShown: isRequired
  }, labelProps), label), typeof description === 'string' ? /*#__PURE__*/_react["default"].createElement(_FormFieldDescription["default"], {
    id: labelFor + '__description'
  }, description) : description), children, typeof validationMessage === 'string' ? /*#__PURE__*/_react["default"].createElement(_FormFieldValidationMessage["default"], {
    marginTop: 8,
    id: labelFor + '__validation-message'
  }, validationMessage) : validationMessage, typeof hint === 'string' ? /*#__PURE__*/_react["default"].createElement(_FormFieldHint["default"], {
    marginTop: 6,
    id: labelFor + '__hint'
  }, hint) : hint);
}));
FormField.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread({
  /**
   * The label used above the input element.
   */
  label: _propTypes["default"].node,

  /**
   * Passed on the label as a htmlFor prop.
   */
  labelFor: _propTypes["default"].string,

  /**
   * Whether or not show an asterix after the label.
   */
  isRequired: _propTypes["default"].bool,

  /**
   * An optional description of the field under the label, above the input element.
   */
  description: _propTypes["default"].node,

  /**
   * An optional hint under the input element.
   */
  hint: _propTypes["default"].node,

  /**
   * If a validation message is passed it is shown under the input element
   * and above the hint. This is unaffected by `isInvalid`.
   */
  validationMessage: _propTypes["default"].node
}, _uiBox.dimensions.propTypes), _uiBox.spacing.propTypes), _uiBox.position.propTypes), _uiBox.layout.propTypes);
var _default = FormField;
exports["default"] = _default;