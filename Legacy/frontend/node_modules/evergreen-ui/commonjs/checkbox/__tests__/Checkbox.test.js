"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _Checkbox = _interopRequireDefault(require("../src/Checkbox"));

describe('Checkbox', function () {
  it('should not crash when rendering', function () {
    expect(function () {
      (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], null));
    }).not.toThrowError();
  });
  it('should render', function () {
    expect(function () {
      (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], null));
    }).not.toBeNull();
  });
  it('should render with an id', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], {
      id: "test-123"
    }));
    expect(_react2.screen.getByRole('checkbox').getAttribute('id')).toEqual('test-123');
  });
  it('should render with a name', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], {
      name: "test-name"
    }));
    expect(_react2.screen.getByRole('checkbox').getAttribute('name')).toEqual('test-name');
  });
  it('should render label with no checked', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], {
      label: "Check me"
    }));
    expect(_react2.screen.getByText('Check me')).toBeVisible();
    expect(_react2.screen.getByRole('checkbox').checked).toBeFalsy();
  });
  it('should be in indeterminate state', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], {
      indeterminate: true
    }));
    expect(_react2.screen.getByRole('checkbox').indeterminate).toBeTruthy();
  });
  it('should be in checked state', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], {
      checked: true
    }));
    expect(_react2.screen.getByRole('checkbox').checked).toBeTruthy();
  });
  it('should be disable when disabled is true', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], {
      disabled: true
    }));
    expect(_react2.screen.getByRole('checkbox').disabled).toBeTruthy();
  });
  it('should check and uncheck checkbox when clicked', function () {
    function ControlledCheckbox() {
      var _React$useState = _react["default"].useState(false),
          _React$useState2 = (0, _slicedToArray2["default"])(_React$useState, 2),
          checked = _React$useState2[0],
          setChecked = _React$useState2[1];

      return /*#__PURE__*/_react["default"].createElement(_Checkbox["default"], {
        checked: checked,
        onChange: function onChange(e) {
          setChecked(e.target.checked);
        }
      });
    }

    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(ControlledCheckbox, null));

    var checkbox = _react2.screen.getByRole('checkbox');

    expect(_react2.screen.getByRole('checkbox').checked).toBeFalsy();

    _react2.fireEvent.click(checkbox);

    expect(_react2.screen.getByRole('checkbox').checked).toBeTruthy();
  });
});