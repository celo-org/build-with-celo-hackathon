"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _ = require("../..");

var _theme = require("../../theme");

var _Card = _interopRequireDefault(require("../src/Card"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var testText = 'card-test-text';
describe('<Card />', function () {
  it('forwards ref', function () {
    var mockRef = jest.fn();
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Card["default"], {
      ref: mockRef
    }));
    expect(mockRef).toHaveBeenCalled();
  });
  it('passes className', function () {
    var testClass = 'test-class-name';
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Card["default"], {
      className: testClass
    }, testText));
    expect(_react2.screen.getByText(testText)).toHaveClass(testClass);
  });
  it('uses theme values', function () {
    var testTheme = _objectSpread(_objectSpread({}, _.defaultTheme), {}, {
      components: _objectSpread(_objectSpread({}, _.defaultTheme.components), {}, {
        Card: {
          baseStyle: {
            color: 'red',
            background: 'blue',
            borderRadius: 25
          }
        }
      })
    });

    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_theme.ThemeProvider, {
      value: testTheme
    }, /*#__PURE__*/_react["default"].createElement(_Card["default"], null, testText)));
    expect(_react2.screen.getByText(testText)).toHaveStyle('color: red');
    expect(_react2.screen.getByText(testText)).toHaveStyle('background: blue');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-top-left-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-top-right-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-bottom-left-radius: 25px');
    expect(_react2.screen.getByText(testText)).toHaveStyle('border-bottom-right-radius: 25px');
  });
  it('passes remaining props down', function () {
    var testId = 'test-id';
    var testLabel = 'test-label';
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Card["default"], {
      id: testId,
      "aria-label": testLabel
    }, testText));
    expect(_react2.screen.getByText(testText)).toHaveAttribute('aria-label', testLabel);
    expect(_react2.screen.getByText(testText)).toHaveAttribute('id', testId);
  });
});