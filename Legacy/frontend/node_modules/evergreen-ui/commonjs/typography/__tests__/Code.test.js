"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _faker = require("@faker-js/faker");

var _react2 = require("@testing-library/react");

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _testing = require("../../../lib/testing");

var _theme = require("../../theme");

var _themes = require("../../themes");

var _Code = _interopRequireDefault(require("../src/Code"));

expect.addSnapshotSerializer(_testing.UIBoxSerializer);
describe('Code', function () {
  it('Should render', function () {
    expect(function () {
      return (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Code["default"], null, "This is my code"));
    }).not.toThrow();
  });
  it.each([['size 300', 300], ['size 400', 400], ['size 500', 500], ['size 600', 600]])('<Code /> %s renders as expected', function (_, size) {
    var component = /*#__PURE__*/_react["default"].createElement(_theme.ThemeProvider, {
      value: _themes.defaultTheme
    }, /*#__PURE__*/_react["default"].createElement(_Code["default"], {
      size: size
    }, "Text ".concat(size)));

    var tree = _reactTestRenderer["default"].create(component).toJSON();

    expect(tree).toMatchSnapshot();
  });
  it.each([['size 300', 300], ['size 400', 400], ['size 500', 500], ['size 600', 600]])('<Code /> %s with minimal appearance specified renders as expected', function (_, size) {
    var component = /*#__PURE__*/_react["default"].createElement(_theme.ThemeProvider, {
      value: _themes.defaultTheme
    }, /*#__PURE__*/_react["default"].createElement(_Code["default"], {
      size: size,
      appearance: "minimal"
    }, "Text ".concat(size)));

    var tree = _reactTestRenderer["default"].create(component).toJSON();

    expect(tree).toMatchSnapshot();
  });
  it('should pass through `className` prop', function () {
    var expected = _faker.faker.random.word().toLowerCase();

    var component = /*#__PURE__*/_react["default"].createElement(_Code["default"], {
      "data-testid": "code",
      className: expected
    }, "Testing");

    var _render = (0, _react2.render)(component),
        getByTestId = _render.getByTestId;

    expect(getByTestId('code')).toHaveClass(expected);
  });
});