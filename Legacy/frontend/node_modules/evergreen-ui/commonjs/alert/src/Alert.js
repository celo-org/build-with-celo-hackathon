"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = require("ui-box");

var _buttons = require("../../buttons");

var _hooks = require("../../hooks");

var _icons = require("../../icons");

var _layers = require("../../layers");

var _typography = require("../../typography");

var _getIconForIntent = require("./getIconForIntent");

var _excluded = ["appearance", "children", "className", "hasIcon", "intent", "isRemoveable", "onRemove", "title"],
    _excluded2 = ["className"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var pseudoSelectors = {};
var internalStyles = {
  position: 'relative',
  overflow: 'hidden',
  display: 'flex',
  // 15 instead of 16 in order to maintain height with 1px border
  padding: '15px'
};
var Alert = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function Alert(props, ref) {
  var _props$appearance = props.appearance,
      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,
      children = props.children,
      className = props.className,
      _props$hasIcon = props.hasIcon,
      hasIcon = _props$hasIcon === void 0 ? true : _props$hasIcon,
      _props$intent = props.intent,
      intent = _props$intent === void 0 ? 'info' : _props$intent,
      _props$isRemoveable = props.isRemoveable,
      isRemoveable = _props$isRemoveable === void 0 ? false : _props$isRemoveable,
      onRemove = props.onRemove,
      title = props.title,
      restProps = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var intentToken = intent === 'none' ? 'info' : intent;

  var _useStyleConfig = (0, _hooks.useStyleConfig)('Alert', {
    appearance: appearance,
    intent: intentToken
  }, pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      styleProps = (0, _objectWithoutProperties2["default"])(_useStyleConfig, _excluded2);

  return /*#__PURE__*/_react["default"].createElement(_layers.Pane, (0, _extends2["default"])({
    ref: ref,
    className: (0, _classnames["default"])(className, themedClassName),
    role: "alert"
  }, styleProps, restProps), hasIcon && /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    marginRight: 16,
    marginLeft: 2,
    marginTop: -1,
    display: "flex",
    alignItems: "flex-start"
  }, (0, _getIconForIntent.getIconForIntent)(intentToken, {
    size: 16
  })), /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    flex: 1
  }, title && /*#__PURE__*/_react["default"].createElement(_typography.Heading, {
    is: "h4",
    size: 400,
    marginTop: 0,
    marginBottom: 0,
    fontWeight: 500,
    lineHeight: 1 // Get this from the theme / props on the Alert
    ,
    color: "inherit"
  }, title), typeof children === 'string' ? /*#__PURE__*/_react["default"].createElement(_typography.Paragraph, {
    size: 400,
    color: "muted",
    marginTop: title ? 8 : 0,
    lineHeight: 1
  }, children) : /*#__PURE__*/_react["default"].createElement(_layers.Pane, null, children)), isRemoveable && /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    marginLeft: 24,
    flexShrink: 0,
    marginBottom: -2,
    marginTop: -4,
    marginRight: -4
  }, /*#__PURE__*/_react["default"].createElement(_buttons.IconButton, {
    icon: _icons.CrossIcon,
    appearance: "minimal",
    height: 24,
    onClick: onRemove,
    intent: intentToken
  })));
}));
Alert.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _uiBox.spacing.propTypes), _uiBox.position.propTypes), _uiBox.layout.propTypes), _uiBox.dimensions.propTypes), {}, {
  /**
   * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.
   */
  children: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /**
   * The intent of the alert.
   */
  intent: _propTypes["default"].string,

  /**
   * The title of the alert.
   */
  title: _propTypes["default"].node,

  /**
   * When true, show a icon on the left matching the type,
   */
  hasIcon: _propTypes["default"].bool,

  /**
   * When true, show a remove icon button.
   */
  isRemoveable: _propTypes["default"].bool,

  /**
   * Function called when the remove button is clicked.
   */
  onRemove: _propTypes["default"].func,

  /**
   * The appearance of the alert.
   */
  appearance: _propTypes["default"].oneOf(['default', 'card'])
});
var _default = Alert;
exports["default"] = _default;