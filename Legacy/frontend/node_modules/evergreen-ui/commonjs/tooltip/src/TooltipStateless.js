"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _hooks = require("../../hooks");

var _layers = require("../../layers");

var _typography = require("../../typography");

var _excluded = ["appearance", "children"],
    _excluded2 = ["color"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var pseudoSelectors = {};
var internalStyles = {};
var TooltipStateless = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function TooltipStateless(props, ref) {
  var appearance = props.appearance,
      children = props.children,
      restProps = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var _useStyleConfig = (0, _hooks.useStyleConfig)('Tooltip', {
    appearance: appearance
  }, pseudoSelectors, internalStyles),
      boxProps = (0, _extends2["default"])({}, _useStyleConfig);

  var color = boxProps.color,
      themedProps = (0, _objectWithoutProperties2["default"])(boxProps, _excluded2);
  var child;

  if (typeof children === 'string') {
    child = /*#__PURE__*/_react["default"].createElement(_typography.Paragraph, {
      color: color,
      size: 400
    }, children);
  } else {
    child = children;
  }

  return /*#__PURE__*/_react["default"].createElement(_layers.Pane, (0, _extends2["default"])({
    ref: ref
  }, themedProps, restProps), child);
}));
TooltipStateless.propTypes = {
  children: _propTypes["default"].node,

  /**
   * The appearance of the tooltip.
   */
  appearance: _propTypes["default"].oneOf(['default', 'card']).isRequired
};
var _default = TooltipStateless;
exports["default"] = _default;