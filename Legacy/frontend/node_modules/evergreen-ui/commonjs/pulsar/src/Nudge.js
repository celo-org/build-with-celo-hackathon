"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Nudge = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Position = _interopRequireDefault(require("../../constants/src/Position"));

var _layers = require("../../layers");

var _warning = _interopRequireDefault(require("../../lib/warning"));

var _popover = require("../../popover");

var _scales = require("../../scales");

var _typography = require("../../typography");

var _Pulsar = require("./Pulsar");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Nudge = function Nudge(_ref) {
  var children = _ref.children,
      _ref$isShown = _ref.isShown,
      isShown = _ref$isShown === void 0 ? false : _ref$isShown,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? _Position["default"].TOP_RIGHT : _ref$position,
      size = _ref.size,
      tooltipContentProp = _ref.tooltipContent,
      onClick = _ref.onClick;

  if (process.env.NODE_ENV !== 'production') {
    (0, _warning["default"])(true, '<Nudge> is deprecated and will be renamed to Pulsar in the next major version of Evergreen.');
  }

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isHovered = _useState2[0],
      setIsHovered = _useState2[1];

  var handleMouseEnter = (0, _react.useCallback)(function () {
    return setIsHovered(true);
  }, [setIsHovered]);
  var handleMouseLeave = (0, _react.useCallback)(function () {
    return setIsHovered(false);
  }, [setIsHovered]);
  var isTooltipContentString = typeof tooltipContentProp === 'string';
  var innerContent = isTooltipContentString ? /*#__PURE__*/_react["default"].createElement(_typography.Text, null, tooltipContentProp) : tooltipContentProp;

  var tooltipContent = /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    maxWidth: 240,
    padding: isTooltipContentString ? (0, _scales.minorScale)(2) : undefined
  }, innerContent);

  return /*#__PURE__*/_react["default"].createElement(_popover.Popover, {
    content: tooltipContent,
    position: position,
    isShown: isShown && isHovered && !!tooltipContentProp,
    trigger: "hover",
    onOpen: handleMouseEnter,
    maxWidth: 240
  }, /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    position: "relative",
    onMouseLeave: handleMouseLeave
  }, isShown && /*#__PURE__*/_react["default"].createElement(_Pulsar.Pulsar, {
    onClick: onClick,
    position: position,
    size: size
  }), children));
};

exports.Nudge = Nudge;
Nudge.displayName = "Nudge";
Nudge.propTypes = {
  /**
   * The position for the Pulsar and the Tooltip
   */
  position: _propTypes["default"].oneOf([_Position["default"].TOP_LEFT, _Position["default"].TOP_RIGHT, _Position["default"].BOTTOM_LEFT, _Position["default"].BOTTOM_RIGHT]),

  /**
   * Size of the Pulsar
   */
  size: _Pulsar.Pulsar.propTypes.size,

  /**
   * Whether or not the Pulsar/Tooltip is shown
   */
  isShown: _propTypes["default"].bool,

  /**
   * Content for the tooltip
   */
  tooltipContent: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].func]),

  /**
   * Content for the Pulsar/tooltip to be anchored to
   */
  children: _propTypes["default"].node,

  /**
   * Called when the Pulsar is clicked
   */
  onClick: _propTypes["default"].func
};