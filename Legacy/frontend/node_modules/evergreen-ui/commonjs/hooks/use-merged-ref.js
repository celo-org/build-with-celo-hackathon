"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMergedRef = useMergedRef;

var _react = _interopRequireDefault(require("react"));

function setRef(ref, node) {
  if (typeof ref === 'function') {
    ref(node);
  } else if (ref && 'current' in ref) {
    ref.current = node;
  }
}
/**
 * React hook that merges up to two React refs into a single memoized function React Ref
 * @param {import('react').Ref<any>} refA
 * @param {import('react').Ref<any>} [refB]
 */


function useMergedRef(refA, refB) {
  return _react["default"].useMemo(function () {
    if (!refA && !refB) {
      return null;
    }

    return function (node) {
      setRef(refA, node);
      setRef(refB, node);
    };
  }, [refA, refB]);
}