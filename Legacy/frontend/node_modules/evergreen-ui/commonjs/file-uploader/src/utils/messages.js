"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMaxFilesMessage = exports.getFileSizeMessage = exports.getAcceptedTypesMessage = void 0;

var _humanizePlus = _interopRequireDefault(require("humanize-plus"));

var _mimeTypesToExtensions = _interopRequireDefault(require("./mime-types-to-extensions"));

/**
 * Returns a standard message informing the user what file extensions are accepted based
 * on the provided array of MimeTypes
 * @param {string[]} acceptedMimeTypes
 * @returns {string}
 */
var getAcceptedTypesMessage = function getAcceptedTypesMessage(acceptedMimeTypes) {
  var fileExtensions = _humanizePlus["default"].oxford((0, _mimeTypesToExtensions["default"])(acceptedMimeTypes));

  return "You can upload ".concat(fileExtensions, " formats.");
};
/**
 * Returns a standard message informing the user of the maximum individual file size
 * @param {number} maxSizeInBytes
 * @returns {string}
 */


exports.getAcceptedTypesMessage = getAcceptedTypesMessage;

var getFileSizeMessage = function getFileSizeMessage(maxSizeInBytes) {
  return "You can upload files up to ".concat(_humanizePlus["default"].fileSize(maxSizeInBytes, 0), ".");
};
/**
 * Returns a standard message informing the user of the maximum number of files that can be uploaded
 * @param {number} maxFiles
 * @returns {string}
 */


exports.getFileSizeMessage = getFileSizeMessage;

var getMaxFilesMessage = function getMaxFilesMessage(maxFiles) {
  return "You can upload up to ".concat(maxFiles, " ").concat(maxFiles === 1 ? 'file' : 'files', ".");
};

exports.getMaxFilesMessage = getMaxFilesMessage;