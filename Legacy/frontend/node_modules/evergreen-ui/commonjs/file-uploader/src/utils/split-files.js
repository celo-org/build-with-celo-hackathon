"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _getAcceptedFiles = _interopRequireDefault(require("./get-accepted-files"));

var _getFileRejections = _interopRequireDefault(require("./get-file-rejections"));

/**
 * @typedef {object} SplitFilesOptions
 * @property {string[] | undefined} acceptedMimeTypes
 * @property {number | undefined} currentFileCount Current count of files used for validating whether the dropped files are over the `maxFiles` limit
 * @property {number | undefined} maxFiles
 * @property {number | undefined} maxSizeInBytes
 */

/**
 * @typedef {object} SplitFilesResult
 * @property {File[]} accepted
 * @property {FileRejection[]} rejected
 */

/**
 * Returns separate arrays for accepted and rejected files based on the provided options.
 * This should be used for accepting and rejecting files on drop
 * @param {File[]} files
 * @param {SplitFilesOptions | undefined} options
 * @returns {SplitFilesResult}
 */
var splitFiles = function splitFiles(files, options) {
  var accepted = (0, _getAcceptedFiles["default"])(files, options);
  var rejected = (0, _getFileRejections["default"])(files, options);
  return {
    accepted: accepted,
    rejected: rejected
  };
};

var _default = splitFiles;
exports["default"] = _default;