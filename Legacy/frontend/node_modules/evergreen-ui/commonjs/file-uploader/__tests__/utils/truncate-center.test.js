"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _truncateCenter = _interopRequireDefault(require("../../src/utils/truncate-center"));

var _templateObject;

describe('truncateCenter', function () {
  it('should not truncate string when length less than maximumChars', function () {
    var input = 'a'.repeat(100);
    var maximumChars = input.length + 1;
    var result = (0, _truncateCenter["default"])(input, maximumChars);
    expect(result).toBe(input);
  });
  it('should not truncate string when length equal to maximumChars', function () {
    var input = 'a'.repeat(100);
    var maximumChars = input.length;
    var result = (0, _truncateCenter["default"])(input, maximumChars);
    expect(result).toBe(input);
  });
  test.each(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n    value                                          | maximumChars | expected\n    ", " | ", "        | ", "\n    ", " | ", "        | ", "\n  "])), 'Screen Shot 2022-02-08 at 10.01.41 AM.png', 10, 'Scre...png', 'Screen Shot 2022-02-08 at 10.01.41 AM.png', 20, 'Screen Sh...1 AM.png')('should truncate $value to $expected when maximumChars is $maximumChars', function (_ref) {
    var expected = _ref.expected,
        maximumChars = _ref.maximumChars,
        value = _ref.value;
    expect((0, _truncateCenter["default"])(value, maximumChars)).toBe(expected);
  });
});