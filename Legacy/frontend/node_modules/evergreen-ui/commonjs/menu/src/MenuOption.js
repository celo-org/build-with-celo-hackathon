"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _hooks = require("../../hooks");

var _icons = require("../../icons");

var _layers = require("../../layers");

var _TableRow = require("../../table/src/TableRow");

var _typography = require("../../typography");

var _excluded = ["className"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var noop = function noop() {};

var internalStyles = {
  display: 'flex',
  alignItems: 'center'
};
var MenuOption = /*#__PURE__*/(0, _react.memo)(function MenuOption(props) {
  var id = props.id,
      children = props.children,
      _props$appearance = props.appearance,
      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,
      _props$onSelect = props.onSelect,
      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,
      secondaryText = props.secondaryText,
      _props$isSelected = props.isSelected,
      isSelected = _props$isSelected === void 0 ? false : _props$isSelected;
  var handleClick = (0, _react.useCallback)(function (e) {
    return onSelect(e);
  }, [onSelect]);

  var _useClickable = (0, _hooks.useClickable)(),
      onKeyDown = _useClickable.onKeyDown,
      tabIndex = _useClickable.tabIndex;

  var _useStyleConfig = (0, _hooks.useStyleConfig)('MenuItem', {
    appearance: appearance
  }, _TableRow.pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      boxProps = (0, _objectWithoutProperties2["default"])(_useStyleConfig, _excluded);

  var textProps = isSelected ? {
    color: 'selected',
    fontWeight: 500,
    marginLeft: 16
  } : {
    marginLeft: 44
  };
  return /*#__PURE__*/_react["default"].createElement(_layers.Pane, (0, _extends2["default"])({
    id: id,
    role: "menuitemradio",
    tabIndex: tabIndex,
    className: themedClassName,
    onClick: handleClick,
    onKeyDown: onKeyDown,
    "data-isselectable": "true",
    "aria-checked": isSelected,
    height: 40
  }, boxProps), isSelected && /*#__PURE__*/_react["default"].createElement(_icons.TickIcon, {
    "aria-hidden": true,
    color: "selected",
    marginLeft: 16,
    marginRight: -4,
    size: 16,
    flexShrink: 0
  }), /*#__PURE__*/_react["default"].createElement(_typography.Text, (0, _extends2["default"])({}, textProps, {
    marginRight: 16,
    flex: 1
  }), children), secondaryText && /*#__PURE__*/_react["default"].createElement(_typography.Text, {
    marginRight: 16,
    color: "muted"
  }, secondaryText));
});
MenuOption.propTypes = {
  /**
   * The id attribute of the menu option.
   */
  id: _propTypes["default"].string,

  /**
   * Function that is called on click and enter/space keypress.
   */
  onSelect: _propTypes["default"].func,

  /**
   * The icon before the label.
   */
  isSelected: _propTypes["default"].bool,

  /**
   * The children of the component.
   */
  children: _propTypes["default"].node,

  /**
   * Secondary text shown on the right.
   */
  secondaryText: _propTypes["default"].node,

  /**
   * The default theme only supports one default appearance.
   */
  appearance: _propTypes["default"].string
};
var _default = MenuOption;
exports["default"] = _default;