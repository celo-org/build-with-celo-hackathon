"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _userEvent = _interopRequireDefault(require("@testing-library/user-event"));

var _PopoverWithTextInputChild = _interopRequireDefault(require("../fixtures/PopoverWithTextInputChild"));

describe('Popover', function () {
  it('Should not be dismissed when clicking on a child within the popover', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var _render, findByTestId, trigger, container, input;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _render = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_PopoverWithTextInputChild["default"], null)), findByTestId = _render.findByTestId;
            _context.next = 3;
            return findByTestId('popover-trigger');

          case 3:
            trigger = _context.sent;

            _userEvent["default"].click(trigger);

            _context.next = 7;
            return findByTestId('popover-container');

          case 7:
            container = _context.sent;
            _context.next = 10;
            return findByTestId('popover-input');

          case 10:
            input = _context.sent;

            // Simulate a user click event on the immediate child node
            _userEvent["default"].click(container);

            expect(container).toBeVisible(); // Click on a child node a level deeper

            _userEvent["default"].click(input);

            expect(container).toBeVisible();
            expect(input).toBeVisible();

          case 16:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  it('Should render its content body to the DOM if `isShown` is set to `true`', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
    var _render2, findByTestId, container;

    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _render2 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_PopoverWithTextInputChild["default"], {
              isShown: true
            })), findByTestId = _render2.findByTestId;
            _context2.next = 3;
            return findByTestId('popover-container');

          case 3:
            container = _context2.sent;
            expect(container).toBeVisible();

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
  it('Should properly report back the event, if the popover body is clicked', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3() {
    var mockBodyClick;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            mockBodyClick = jest.fn();
            (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_PopoverWithTextInputChild["default"], {
              isShown: true,
              onBodyClick: mockBodyClick
            }));

            _userEvent["default"].click(document.body);

            expect(mockBodyClick).toHaveBeenCalledTimes(1);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  })));
  it('Should remain open if a user clicks somewhere outside of the popover area and `shouldCloseOnExternalClick` is `false`', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4() {
    var _render3, findByTestId, container;

    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _render3 = (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_PopoverWithTextInputChild["default"], {
              isShown: true,
              shouldCloseOnExternalClick: false
            })), findByTestId = _render3.findByTestId;
            _context4.next = 3;
            return findByTestId('popover-container');

          case 3:
            container = _context4.sent;
            expect(container).toBeVisible();

            _userEvent["default"].click(document.body); // Container should still be after document body was clicked


            expect(container).toBeVisible();

          case 7:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  })));
});