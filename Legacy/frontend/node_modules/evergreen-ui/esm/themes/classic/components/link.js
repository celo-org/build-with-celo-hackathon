import tinycolor from 'tinycolor2';
var baseStyle = {
  color: function color(_, _ref) {
    var _color = _ref.color;
    return "colors.".concat(getThemeKeyForColor(_color), ".base");
  },
  _hover: {
    color: function color(_, _ref2) {
      var _color2 = _ref2.color;
      return tinycolor("colors.".concat(getThemeKeyForColor(_color2), ".base")).lighten(10).toString();
    }
  },
  _active: {
    color: function color(theme, _ref3) {
      var _color3 = _ref3.color;
      return tinycolor(theme.colors[getThemeKeyForColor(_color3)].base).darken(10).toString();
    }
  },
  _focus: {
    boxShadow: function boxShadow(theme, _ref4) {
      var color = _ref4.color;
      return "0 0 0 2px ".concat(tinycolor(theme.colors[getThemeKeyForColor(color)].base).setAlpha(0.4).toString());
    }
  }
};

var getThemeKeyForColor = function getThemeKeyForColor(color) {
  switch (color) {
    case 'blue':
    case 'neutral':
    case 'green':
      return color;

    default:
      return 'blue';
  }
};

var appearances = {};
var sizes = {};
export default {
  baseStyle: baseStyle,
  appearances: appearances,
  sizes: sizes
};