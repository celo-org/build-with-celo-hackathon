import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from 'react';
import { render, screen } from '@testing-library/react';
import renderer from 'react-test-renderer';
import { UIBoxSerializer } from '../../../lib/testing';
import { ThemeProvider } from '../../theme';
import { defaultTheme } from '../../themes';
import Heading from '../src/Heading';
expect.addSnapshotSerializer(UIBoxSerializer);
test.each([['size 100', 100], ['size 200', 200], ['size 300', 300], ['size 400', 400], ['size 500', 500], ['size 600', 600], ['size 700', 700], ['size 800', 800], ['size 900', 900]])('<Heading /> %s renders as expected', function (_, size) {
  var component = /*#__PURE__*/React.createElement(ThemeProvider, {
    value: defaultTheme
  }, /*#__PURE__*/React.createElement(Heading, {
    size: size
  }, "Heading ".concat(size)));
  var tree = renderer.create(component).toJSON();
  expect(tree).toMatchSnapshot();
});
test('Heading lets you override the underlying DOM element', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
  return _regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          render( /*#__PURE__*/React.createElement(ThemeProvider, {
            value: defaultTheme
          }, /*#__PURE__*/React.createElement(Heading, {
            is: "h1"
          }, "Testing h1")));
          expect(screen.getByText('Testing h1', {
            selector: 'h1'
          })).toBeTruthy();

        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));